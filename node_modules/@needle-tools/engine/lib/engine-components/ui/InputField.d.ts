import { Behaviour } from "../Component.js";
import { EventList } from "../EventList.js";
import { type IPointerEventHandler } from "./PointerEvents.js";
export declare class InputField extends Behaviour implements IPointerEventHandler {
    get text(): string;
    get isFocused(): boolean;
    private textComponent?;
    private placeholder?;
    onValueChanged?: EventList;
    onEndEdit?: EventList;
    private static active;
    private static activeTime;
    private static htmlField;
    private static htmlFieldFocused;
    private inputEventFn;
    private _iosEventFn;
    start(): void;
    onEnable(): void;
    onDisable(): void;
    /** Clear the input field if it's currently active */
    clear(): void;
    /** Select the input field, set it active to receive keyboard input */
    select(): void;
    /** Deselect the input field, stop receiving keyboard input */
    deselect(): void;
    onPointerClick(_args: any): void;
    private activeLoop;
    private onSelected;
    private onDeselected;
    update(): void;
    private onInput;
    private setTextFromInputField;
    private selectInputField;
    private processInputOniOS;
}
