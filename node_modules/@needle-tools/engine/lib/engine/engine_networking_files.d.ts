import { Vector3 } from "three";
import type { GLTF } from 'three/examples/jsm/loaders/GLTFLoader.js';
import { Context } from "../engine/engine_setup.js";
import type { IModel } from "./engine_networking_types.js";
export declare enum File_Event {
    File_Spawned = "file-spawned"
}
export declare class FileSpawnModel implements IModel {
    guid: string;
    file_name: string;
    file_hash: string;
    file_size: number;
    position: Vector3 | null;
    seed: number;
    sender: string;
    serverUrl: string;
    parentGuid?: string;
    boundsSize?: Vector3;
    constructor(connectionId: string, seed: number, guid: string, name: string, hash: string, size: number, position: Vector3 | null, serverUrl: string);
}
export declare function addFile(file: File, context: Context, backendUrl?: string): Promise<GLTF | null>;
export declare function addFileFromUrl(url: URL, context: Context): Promise<GLTF | null>;
export declare function beginListenFileSpawn(context: Context): void;
