import { getParam } from "./engine_utils.js";
const debug = getParam("debugtypes");
class _TypeStore {
    _types = {};
    constructor() {
        if (debug)
            console.warn("TypeStore: Created", this);
    }
    add(key, type) {
        if (debug)
            console.warn("ADD TYPE", key);
        const existing = this._types[key];
        if (existing === undefined)
            this._types[key] = type;
        else {
            if (debug) {
                if (existing !== type) {
                    console.warn("Type name exists multiple times in your project and may lead to runtime errors:", key);
                }
            }
        }
    }
    get(key) {
        return this._types[key];
    }
}
export const $BuiltInTypeFlag = Symbol("BuiltInType");
export const TypeStore = new _TypeStore();
/**
 * add to a class declaration to automatically register it to the TypeStore (required for HMR right now)
 *
 * `@registerType`
 *
 * `export class MyType extends Behaviour { ... }`
 */
export const registerType = function (constructor) {
    if (!TypeStore.get(constructor.name))
        TypeStore.add(constructor.name, constructor);
};
//# sourceMappingURL=engine_typestore.js.map