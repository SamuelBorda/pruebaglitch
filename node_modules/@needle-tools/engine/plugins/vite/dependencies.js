




/**
 * @param {import('../types').userSettings} userSettings
 */
export const needleDependencies = (command, config, userSettings) => {
    /**
     * @type {import('vite').Plugin}
     */
    return {
        name: 'needle-dependencies',
        enforce: 'pre',
        config: (config) => {
            if (config.optimizeDeps?.include?.includes("three-mesh-bvh")) {
                console.log("[needle-dependencies] three-mesh-bvh is included in the optimizeDeps.include array. This may cause issues with the worker import.");
            }
            else {
                if (!config.optimizeDeps) {
                    config.optimizeDeps = {};
                }
                if (!config.optimizeDeps.exclude) {
                    config.optimizeDeps.exclude = [];
                }
                console.log("[needle-dependencies] Adding three-mesh-bvh to the optimizeDeps.exclude array.");
                // This needs to be excluded from optimization because otherwise the worker import fails
                // three-mesh-bvh/src/workers/generateMeshBVH.worker.js?worker
                config.optimizeDeps.exclude.push("three-mesh-bvh");
            }
        }
    }
}
