import { Behavior } from "./Behavior";
import { Particle } from "../Particle";
import { ParticleSystem } from "../ParticleSystem";
import { BaseEvent } from "three";
import { ParticleEmitter } from "../ParticleEmitter";
export declare class EmitSubParticleSystem implements Behavior {
    private particleSystem;
    useVelocityAsBasis: boolean;
    subParticleSystem?: ParticleEmitter<BaseEvent> | undefined;
    type: string;
    private q_;
    private v_;
    private v2_;
    constructor(particleSystem: ParticleSystem, useVelocityAsBasis: boolean, subParticleSystem?: ParticleEmitter<BaseEvent> | undefined);
    initialize(particle: Particle): void;
    update(particle: Particle, delta: number): void;
    frameUpdate(delta: number): void;
    toJSON(): any;
    static fromJSON(json: any, particleSystem: ParticleSystem): Behavior;
    clone(): Behavior;
    reset(): void;
}
