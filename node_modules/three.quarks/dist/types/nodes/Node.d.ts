import { Vector2 } from 'three';
import { NodeValueType } from './NodeValueType';
import { ExecutionContext, NodeType } from './NodeType';
export type NodeData = {
    [key: string]: any;
};
export declare class Node {
    id: string;
    inputs: (Wire | ConstInput | undefined)[];
    outputs: Wire[][];
    type: NodeType;
    signatureIndex: number;
    data: NodeData;
    position: Vector2;
    outputValues: any[];
    constructor(type: NodeType);
    get inputTypes(): NodeValueType[];
    get outputTypes(): NodeValueType[];
    func(context: ExecutionContext, inputs: any[], outputs: any[]): void;
}
export interface ConstInput {
    getValue(context: ExecutionContext): any;
}
export declare class Wire {
    input: Node;
    inputIndex: number;
    output: Node;
    outputIndex: number;
    constructor(input: Node, inputIndex: number, output: Node, outputIndex: number);
}
