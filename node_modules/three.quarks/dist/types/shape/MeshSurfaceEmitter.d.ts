import { EmitterShape, ShapeJSON } from "./EmitterShape";
import { Particle } from "../Particle";
import { BufferGeometry } from "three";
import { JsonMetaData } from "../ParticleSystem";
export declare class MeshSurfaceEmitter implements EmitterShape {
    type: string;
    private _triangleIndexToArea;
    private _geometry?;
    get geometry(): BufferGeometry | undefined;
    set geometry(geometry: BufferGeometry | undefined);
    constructor(geometry?: BufferGeometry);
    private _tempA;
    private _tempB;
    private _tempC;
    initialize(p: Particle): void;
    toJSON(): ShapeJSON;
    static fromJSON(json: any, meta: JsonMetaData): MeshSurfaceEmitter;
    clone(): EmitterShape;
}
